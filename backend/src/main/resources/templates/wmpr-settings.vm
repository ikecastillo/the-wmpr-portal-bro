<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="decorator" content="atl.general">
    <title>WMPR Settings - $projectName</title>
    
    ## CRITICAL: Test React/AtlasKit availability in Project Config context
    $webResourceManager.requireResource("com.atlassian.jira.plugins.jira-react-plugin:react")
    $webResourceManager.requireResource("com.atlassian.auiplugin:ajs")
    $webResourceManager.requireResourcesForContext("com.example.wmpr.backend:entrypoint-wmprRequestsTable")
    <style>
        .wmpr-settings-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border: 1px solid #dfe1e6;
            border-radius: 5px;
        }
        .wmpr-settings-form {
            margin-top: 20px;
        }
        .wmpr-form-group {
            margin-bottom: 20px;
        }
        .wmpr-form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
            color: #172b4d;
        }
        .wmpr-radio-group {
            margin: 10px 0;
        }
        .wmpr-radio-option {
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #dfe1e6;
            border-radius: 3px;
            background: #f4f5f7;
        }
        .wmpr-radio-option input[type="radio"] {
            margin-right: 8px;
        }
        .wmpr-radio-option label {
            font-weight: normal;
            margin-bottom: 5px;
            cursor: pointer;
        }
        .wmpr-default-jql {
            background: #f8f9fa;
            border: 1px solid #e1e5e9;
            padding: 10px;
            margin-top: 8px;
            border-radius: 3px;
            font-family: monospace;
            font-size: 12px;
            color: #42526e;
        }
        .wmpr-custom-jql {
            width: 100%;
            height: 80px;
            margin-top: 8px;
            padding: 8px;
            border: 1px solid #dfe1e6;
            border-radius: 3px;
            font-family: monospace;
            font-size: 12px;
            resize: vertical;
        }
        .wmpr-buttons {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #dfe1e6;
        }
        .wmpr-button {
            padding: 8px 16px;
            margin-right: 10px;
            border: 1px solid #dfe1e6;
            border-radius: 3px;
            background: white;
            color: #172b4d;
            text-decoration: none;
            cursor: pointer;
            font-size: 14px;
        }
        .wmpr-button-primary {
            background: #0052cc;
            color: white;
            border-color: #0052cc;
        }
        .wmpr-button:hover {
            background: #f4f5f7;
        }
        .wmpr-button-primary:hover {
            background: #0065ff;
        }
        .wmpr-success-message {
            background: #e3fcef;
            border: 1px solid #36b37e;
            color: #006644;
            padding: 10px;
            border-radius: 3px;
            margin-bottom: 20px;
        }
        .wmpr-breadcrumb {
            margin-bottom: 20px;
            color: #626f86;
            font-size: 12px;
        }
        .wmpr-breadcrumb a {
            color: #0052cc;
            text-decoration: none;
        }
    </style>
    <script>
        function toggleJqlInput() {
            var customRadio = document.getElementById('jql-custom');
            var customTextarea = document.getElementById('customJql');
            
            if (customRadio.checked) {
                customTextarea.disabled = false;
                customTextarea.focus();
            } else {
                customTextarea.disabled = true;
            }
        }
        
        function validateForm() {
            var customRadio = document.getElementById('jql-custom');
            var customJql = document.getElementById('customJql').value.trim();
            
            if (customRadio.checked && customJql === '') {
                alert('Please enter a custom JQL query or select the default option.');
                return false;
            }
            
            return true;
        }
    </script>
</head>
<body>
    <div class="wmpr-settings-container">
        <div class="wmpr-breadcrumb">
            <a href="/browse/$projectKey">$projectName</a> &gt; 
            <a href="/plugins/servlet/project-config/$projectKey">Project Settings</a> &gt; 
            WMPR Settings
        </div>
        
        <h2>WMPR Settings for $projectName</h2>
        <p>Configure how WMPR requests are displayed in the Service Desk portal.</p>
        
        #if($request.getParameter("saved"))
        <div class="wmpr-success-message">
            ✓ Settings saved successfully!
        </div>
        #end
        
        <form method="post" class="wmpr-settings-form" onsubmit="return validateForm()">
            <input type="hidden" name="projectKey" value="$projectKey">
            
            <div class="wmpr-form-group">
                <label>JQL Query Configuration:</label>
                <p style="color: #626f86; font-size: 14px; margin-bottom: 15px;">
                    Choose how to filter WMPR requests displayed in the portal.
                </p>
                
                <div class="wmpr-radio-group">
                    <div class="wmpr-radio-option">
                        <label>
                            <input type="radio" 
                                   name="jqlOption" 
                                   value="default" 
                                   id="jql-default"
                                   #if(!$useCustomJql)checked#end
                                   onchange="toggleJqlInput()">
                            Use Default JQL Query
                        </label>
                        <div class="wmpr-default-jql">$defaultJql</div>
                    </div>
                    
                    <div class="wmpr-radio-option">
                        <label>
                            <input type="radio" 
                                   name="jqlOption" 
                                   value="custom" 
                                   id="jql-custom"
                                   #if($useCustomJql)checked#end
                                   onchange="toggleJqlInput()">
                            Use Custom JQL Query
                        </label>
                        <textarea name="customJql" 
                                  id="customJql"
                                  class="wmpr-custom-jql" 
                                  placeholder="Enter your custom JQL query here..."
                                  #if(!$useCustomJql)disabled#end>$currentJql</textarea>
                        <small style="color: #626f86; display: block; margin-top: 5px;">
                            Example: project = "MYPROJECT" AND status != "Done" ORDER BY created DESC
                        </small>
                    </div>
                </div>
            </div>
            
            <div class="wmpr-buttons">
                <input type="submit" value="Save Settings" class="wmpr-button wmpr-button-primary">
                <a href="/plugins/servlet/project-config/$projectKey" class="wmpr-button">Cancel</a>
            </div>
        </form>
    </div>
    
    <!-- REACT/ATLASKIT TEST SECTION -->
    <div class="wmpr-settings-container" style="margin-top: 30px;">
        <h3>🧪 React/AtlasKit Compatibility Test</h3>
        <p style="color: #626f86; font-size: 14px;">
            Testing if React and AtlasKit work in the Project Configuration context...
        </p>
        
        <!-- Debug Information Panel -->
        <div id="react-debug-info" style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 15px 0; font-family: monospace; font-size: 12px; border-radius: 4px;">
            <strong>React Debug Info:</strong><br>
            <span id="debug-context">Context: Project Configuration</span><br>
            <span id="debug-react-status">React Status: Checking...</span><br>
            <span id="debug-bundle-status">Bundle Status: Checking...</span><br>
            <span id="debug-atlaskit-status">AtlasKit Status: Checking...</span>
        </div>
        
        <!-- React Component Test Container -->
        <div id="react-test-container" style="padding: 20px; border: 2px dashed #dfe1e6; border-radius: 4px; min-height: 100px;">
            <div id="react-loading" style="text-align: center; color: #626f86; padding: 20px;">
                🔄 Loading React component test...
            </div>
        </div>
        
        <!-- Fallback Message -->
        <div id="react-fallback" style="display: none; background: #ffebe6; border: 1px solid #ff8f73; padding: 15px; margin-top: 15px; border-radius: 4px;">
            <strong>React Not Available</strong><br>
            React/AtlasKit components cannot be used in this context. Using vanilla JS fallback.
        </div>
        
        <!-- Success Message -->
        <div id="react-success" style="display: none; background: #e3fcef; border: 1px solid #36b37e; padding: 15px; margin-top: 15px; border-radius: 4px;">
            <strong>✅ React Works!</strong><br>
            React and AtlasKit are available in this context. You can use modern components here.
        </div>
    </div>
    
    <script>
        // Initialize the form state
        document.addEventListener('DOMContentLoaded', function() {
            toggleJqlInput();
        });
        
        // REACT/ATLASKIT TEST SCRIPT
        (function testReactAvailability() {
            console.log('[WMPR-SETTINGS-001] Starting React availability test...');
            
            function updateDebugUI(id, message) {
                const element = document.getElementById(id);
                if (element) element.textContent = message;
            }
            
            function showFallback(reason) {
                console.log('[WMPR-SETTINGS-002] React not available:', reason);
                document.getElementById('react-fallback').style.display = 'block';
                document.getElementById('react-loading').style.display = 'none';
                updateDebugUI('debug-react-status', 'React Status: NOT AVAILABLE - ' + reason);
            }
            
            function showSuccess() {
                console.log('[WMPR-SETTINGS-003] React available, initializing component...');
                document.getElementById('react-success').style.display = 'block';
                document.getElementById('react-loading').style.display = 'none';
                updateDebugUI('debug-react-status', 'React Status: AVAILABLE ✅');
                
                // Try to initialize our React component
                if (typeof window.initWMPRRequestsTable === 'function') {
                    console.log('[WMPR-SETTINGS-004] Found WMPR init function, testing...');
                    updateDebugUI('debug-bundle-status', 'Bundle Status: AVAILABLE ✅');
                    
                    try {
                        // Create a test container for the React component
                        const testContainer = document.getElementById('react-test-container');
                        testContainer.innerHTML = '<div id="wmpr-react-test-root"></div>';
                        
                        // Initialize the React component in test mode
                        window.initWMPRRequestsTable('wmpr-react-test-root');
                        updateDebugUI('debug-atlaskit-status', 'AtlasKit Status: COMPONENT LOADED ✅');
                        
                    } catch (error) {
                        console.error('[WMPR-SETTINGS-005] Error initializing React component:', error);
                        updateDebugUI('debug-bundle-status', 'Bundle Status: ERROR - ' + error.message);
                        testContainer.innerHTML = '<div style="color: #de350b; padding: 10px;">❌ Component Error: ' + error.message + '</div>';
                    }
                } else {
                    console.log('[WMPR-SETTINGS-006] WMPR init function not found');
                    updateDebugUI('debug-bundle-status', 'Bundle Status: INIT FUNCTION NOT FOUND');
                    document.getElementById('react-test-container').innerHTML = '<div style="color: #ff8b00; padding: 10px;">⚠️ React available but WMPR bundle not loaded</div>';
                }
            }
            
            // Initial debug info
            updateDebugUI('debug-context', 'Context: Project Configuration (' + window.location.pathname + ')');
            
            // Test React availability
            setTimeout(function() {
                if (typeof window.React === 'undefined') {
                    showFallback('window.React is undefined');
                } else if (typeof window.ReactDOM === 'undefined') {
                    showFallback('window.ReactDOM is undefined');
                } else {
                    updateDebugUI('debug-react-status', 'React Status: React v' + (React.version || 'unknown') + ' & ReactDOM available ✅');
                    showSuccess();
                }
            }, 2000); // Wait 2 seconds for resources to load
        })();
    </script>
</body>
</html> 